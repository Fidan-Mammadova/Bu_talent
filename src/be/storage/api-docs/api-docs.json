{
    "openapi": "3.0.0",
    "info": {
        "title": "AutoLuxAz API",
        "description": "Invoice management sistem API endpoints",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api": {},
        "app": {},
        "/v1/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Register a new user",
                "operationId": "9a85fd77cab7fcd07ed3a9b53259a1ed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "authorization": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user and get JWT token",
                "description": "Login user and get JWT token",
                "operationId": "8d6336fa4086287feb4277e8f278a85b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/v1/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get authenticated user details",
                "description": "Get authenticated user details",
                "operationId": "989c566c9948ff1f401a0afacd5964ed",
                "responses": {
                    "200": {
                        "description": "User details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Auth"
                ],
                "summary": "Update authenticated user profile",
                "description": "Update authenticated user profile",
                "operationId": "8ba6450dc11a142a86ac8d761641e212",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user (Invalidate the token)",
                "description": "Logout user (Invalidate the token)",
                "operationId": "bfb82977913ce7afc954b81674a0d81b",
                "responses": {
                    "200": {
                        "description": "Successfully logged out"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh JWT token",
                "description": "Refresh JWT token",
                "operationId": "107aad9cfd3e75f44b5bbc16c9fb1368",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/auth/generate-otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Generate OTP for user",
                "description": "Generate OTP for user",
                "operationId": "53838e1c0b8fb66d0ed79d7b3e3e9988",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP has been generated successfully"
                                        },
                                        "otp": {
                                            "type": "string",
                                            "example": "123456"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/v1/auth/verify-otp": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify OTP for user",
                "description": "Verify OTP for user",
                "operationId": "4455b4248a21098bcd91b280e0cdf2b0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/v1/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of orders",
                "description": "Returns a paginated list of orders",
                "operationId": "getOrdersList",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    },
                    {
                        "name": "orderBrand[lk]",
                        "in": "query",
                        "description": "Search query [eq,lt,lte,gt,gte,ne,lk,ilk,nlk,inlk,bt,nbt,in,nin,json]",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "GET"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "result": {
                                            "$ref": "#/components/schemas/OrderCollection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "description": "Stores a new order and returns its data",
                "operationId": "storeOrder",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "POST"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "result": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Order successfully created"
                                                },
                                                "data": {
                                                    "$ref": "#/components/schemas/OrderResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "POST"
                                        },
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Sifariş məlumatları qeyd edilməyib."
                                                }
                                            }
                                        },
                                        "result": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/orders/statuses": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get list of order statuses",
                "description": "Returns list of order statuses",
                "operationId": "getOrdersStatusesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders/types"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "GET"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "value": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "example": "Fərdi"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/v1/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get a specific order",
                "description": "Returns order data",
                "operationId": "getOrderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders/10"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "POST"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "result": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Order successfully show: 10"
                                                },
                                                "data": {
                                                    "$ref": "#/components/schemas/OrderResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders/10"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "GET"
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": "Resource not found: Order not found with ID: 10"
                                        },
                                        "result": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update an existing order",
                "description": "Updates an order's details",
                "operationId": "updateOrderPut",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders/10"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "PUT"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "result": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Order successfully updated"
                                                },
                                                "data": {
                                                    "$ref": "#/components/schemas/OrderResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders/10"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "PUT"
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": "Resource not found: Order not found with ID: 10"
                                        },
                                        "result": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders/10"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "PUT"
                                        },
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Sifariş məlumatları qeyd edilməyib."
                                                }
                                            }
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete an order",
                "description": "Deletes an order by ID",
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Order successfully deleted"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders/10"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "DELETE"
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": "Resource not found: Order not found with ID: 10"
                                        },
                                        "result": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update an existing order specific data",
                "description": "Updates an order's details",
                "operationId": "updateOrderPatch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders/10"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "PATCH"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "result": {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Order successfully updated"
                                                },
                                                "data": {
                                                    "$ref": "#/components/schemas/OrderResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders/10"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "PATCH"
                                        },
                                        "error": {
                                            "type": "object",
                                            "example": "Resource not found: Order not found with ID: 10"
                                        },
                                        "result": {
                                            "type": "object",
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-02-15T23:21:32+04:00"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "api/v1/orders/10"
                                        },
                                        "method": {
                                            "type": "string",
                                            "example": "PATCH"
                                        },
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "Sifariş məlumatları qeyd edilməyib."
                                                }
                                            }
                                        },
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get list of tasks",
                "description": "Returns list of tasks",
                "operationId": "getTasksList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "datetime"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StoreOrderRequest": {
                "title": "Store Order Request",
                "description": "Store Order request body data",
                "required": [
                    "customerId",
                    "orderId",
                    "orderBrand",
                    "orderDate",
                    "orderPrice",
                    "orderStatus"
                ],
                "properties": {
                    "customerId": {
                        "description": "The ID of the customer",
                        "type": "integer",
                        "example": 123
                    },
                    "orderBrand": {
                        "description": "Brand of the order",
                        "type": "string",
                        "example": "Nike"
                    },
                    "orderDate": {
                        "description": "Date of the order",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-30"
                    },
                    "orderPrice": {
                        "description": "Total order price",
                        "type": "number",
                        "format": "float",
                        "example": 199.99
                    },
                    "orderStatus": {
                        "description": "Current status of the order",
                        "type": "string",
                        "example": "Pending"
                    }
                },
                "type": "object"
            },
            "UpdateOrderRequest": {
                "title": "Update Order Request",
                "description": "Update Order request body data",
                "required": [
                    "customerId",
                    "orderId",
                    "orderBrand",
                    "orderDate",
                    "orderPrice",
                    "orderStatus"
                ],
                "properties": {
                    "customerId": {
                        "description": "The ID of the customer",
                        "type": "integer",
                        "example": 123
                    },
                    "orderBrand": {
                        "description": "Brand of the order",
                        "type": "string",
                        "example": "Nike"
                    },
                    "orderDate": {
                        "description": "Date of the order",
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-30"
                    },
                    "orderPrice": {
                        "description": "Total order price",
                        "type": "number",
                        "format": "float",
                        "example": 199.99
                    },
                    "orderStatus": {
                        "description": "Current status of the order",
                        "type": "string",
                        "example": "Pending"
                    }
                },
                "type": "object"
            },
            "OrderCollection": {
                "title": "Order Collection",
                "description": "A collection of orders with pagination metadata",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Order successfully full list."
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderResource"
                        }
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 5
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 15
                            },
                            "to": {
                                "type": "integer",
                                "example": 15
                            },
                            "total": {
                                "type": "integer",
                                "example": 75
                            }
                        },
                        "type": "object"
                    },
                    "links": {
                        "properties": {
                            "self": {
                                "type": "string",
                                "example": "http://example.com/api/orders?page=1"
                            },
                            "first": {
                                "type": "string",
                                "example": "http://example.com/api/orders?page=1"
                            },
                            "last": {
                                "type": "string",
                                "example": "http://example.com/api/orders?page=5"
                            },
                            "prev": {
                                "type": "string",
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "example": "http://example.com/api/orders?page=2"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "OrderResource": {
                "title": "Order Resource",
                "description": "Single Order resource",
                "properties": {
                    "orderId": {
                        "type": "integer",
                        "example": 1
                    },
                    "orderBrand": {
                        "type": "string",
                        "example": "Apple"
                    },
                    "orderDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "orderPrice": {
                        "type": "number",
                        "format": "float",
                        "example": 1500.5
                    },
                    "orderStatus": {
                        "properties": {
                            "value": {
                                "type": "integer",
                                "example": 1
                            },
                            "label": {
                                "type": "string",
                                "example": "Approved"
                            }
                        },
                        "type": "object"
                    },
                    "orderStatusOld": {
                        "properties": {
                            "value": {
                                "type": "integer",
                                "example": 2
                            },
                            "label": {
                                "type": "string",
                                "example": "Pending"
                            }
                        },
                        "type": "object"
                    },
                    "orderNote": {
                        "type": "string",
                        "format": "string",
                        "example": "Test Test"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 00:00:00"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01 00:00:00"
                    }
                },
                "type": "object"
            },
            "403Error": {
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {},
                        "example": []
                    },
                    "error": {
                        "type": "string",
                        "example": "User does not have the right roles."
                    }
                },
                "type": "object"
            },
            "401Error": {
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {},
                        "example": []
                    },
                    "error": {
                        "type": "string",
                        "example": "Ошибка аутентификации."
                    }
                },
                "type": "object"
            },
            "500Error": {
                "properties": {
                    "result": {
                        "type": "array",
                        "items": {},
                        "example": []
                    },
                    "error": {
                        "type": "string",
                        "example": "Error string"
                    }
                },
                "type": "object"
            },
            "authData": {
                "description": "Ответ с данными авторизованного пользователя",
                "type": "object",
                "allOf": [
                    {
                        "properties": {
                            "result": {
                                "properties": {
                                    "access_token": {
                                        "description": "JWT access token для авторизации пользователя.",
                                        "type": "string",
                                        "example": "eyJ0eXAiOiJKV1QiLCJI6IjIiLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.dF2UutsiZaLlPB6Mo8wk3Ix3y4oXFMz8GeFX1RM53c8"
                                    },
                                    "token_type": {
                                        "description": "Тип токена, обычно 'bearer'.",
                                        "type": "string",
                                        "example": "bearer"
                                    },
                                    "expires_in": {
                                        "description": "Время действия токена в секундах.",
                                        "type": "integer",
                                        "example": 2073600
                                    }
                                },
                                "type": "object"
                            },
                            "error": {
                                "description": "Поле ошибки, будет равно null в случае успешного ответа.",
                                "type": "string",
                                "example": null,
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                ]
            }
        },
        "responses": {
            "401": {
                "description": "Unauthenticated"
            },
            "403": {
                "description": "Forbidden"
            }
        },
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "API Endpoints of Auth Management System"
        },
        {
            "name": "Orders",
            "description": "API Endpoints of Orders Management System"
        },
        {
            "name": "Tasks",
            "description": "API Endpoints of Tasks Management System"
        }
    ]
}